<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vagrant on fabiorehm.com</title><link>https://fabiorehm.com/tags/vagrant/</link><description>Recent content in vagrant on fabiorehm.com</description><generator>Hugo -- gohugo.io</generator><copyright>&amp;copy; &lt;a href="https://github.com/fgrehm">Fabio Rehm&lt;/a> 2013-2022</copyright><lastBuildDate>Tue, 21 Jul 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://fabiorehm.com/tags/vagrant/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick update about some Vagrant plugins</title><link>https://fabiorehm.com/blog/2015/07/21/quick-update-about-some-vagrant-plugins/</link><pubDate>Tue, 21 Jul 2015 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2015/07/21/quick-update-about-some-vagrant-plugins/</guid><description>If you&amp;rsquo;ve been following this blog (which hasn&amp;rsquo;t been updated in a loooong time), chances are that you are likely to be a user of one of the Vagrant plugins I&amp;rsquo;ve released on the past. What you might not know is that I haven&amp;rsquo;t been using Vagrant so frequently over the last year or so and haven&amp;rsquo;t had much time to work on them to put up to the plans I originally had in mind.</description></item><item><title>Trigger notify-send across the network using HTTP</title><link>https://fabiorehm.com/blog/2014/10/12/trigger-notify-send-across-the-network-using-http/</link><pubDate>Sun, 12 Oct 2014 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2014/10/12/trigger-notify-send-across-the-network-using-http/</guid><description>Last week I cut the first release of notify-send-http, a tool for triggering notify-send across the network using HTTP. Useful for forwarding notifications from local VMs / Containers to your own computer. It even supports notification icons!
Tested on Ubuntu 14.04 only
Why? Because I do all of my dev work on virtualized environments and I use guard quite a lot to keep my Ruby tests running when files get changed.</description></item><item><title>So I released a lot of Vagrant plugins... Now what's next?</title><link>https://fabiorehm.com/blog/2013/12/12/so-i-released-a-lot-of-vagrant-plugins-now-what-s-next/</link><pubDate>Thu, 12 Dec 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/12/12/so-i-released-a-lot-of-vagrant-plugins-now-what-s-next/</guid><description>2013 was the year I went 100% on Vagrant, went crazy releasing plugins (10 to be more specific) and ended becoming a Vagrant core commiter back in June. To give you an idea, this is what I&amp;rsquo;ve released over the year:
vagrant-notify - Released at the end of 2012, but &amp;ldquo;matured&amp;rdquo; by beginning of 2013 vagrant-boxen (deprecated) - February 17th vagrant-lxc - March 12th vagrant-cachier - May 22nd vagrant-pristine (deprecated) - July 11th bindler - (deprecated) Public release on July 15th as Vundler and later renamed to Bindler vagrant-global-status (deprecated) - August 8th vocker (deprecated) - August 14th ventriloquist (deprecated) - September 10th docker-provider (deprecated) - November 5th Before you think I&amp;rsquo;m going nuts, I have a reason behind releasing each plugin and I might blog about that someday but for the scope of this post I&amp;rsquo;ll focus on what you should expect for each one of them over 2014.</description></item><item><title>Set the default Vagrant provider from your Vagrantfile</title><link>https://fabiorehm.com/blog/2013/11/12/set-the-default-vagrant-provider-from-your-vagrantfile/</link><pubDate>Tue, 12 Nov 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/11/12/set-the-default-vagrant-provider-from-your-vagrantfile/</guid><description>There are times that you might need / want to use a specific provider for your Vagrant boxes that differs from VirtualBox or whatever provider you have set on your VAGRANT_DEFAULT_PROVIDER environmental variable.
For experienced Ruby users this might seem something trivial to do but since Vagrant&amp;rsquo;s community is made of people from many different programming languages background, I thought it would be nice to share this little trick I find useful when I need to make sure the VMs goes up with the right provider.</description></item><item><title>Getting to know BTRFS</title><link>https://fabiorehm.com/blog/2013/10/15/getting-to-know-btrfs/</link><pubDate>Tue, 15 Oct 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/10/15/getting-to-know-btrfs/</guid><description>I&amp;rsquo;ve been playing a lot with Docker recently and while learning more about it I came across &amp;ldquo;Another Union File System&amp;rdquo; (AUFS) + its Copy On Write (COW) capabilities and have been pretty impressed by it. In short, by using a COW + union file system Docker makes things really cheap when it comes to disk usage.
The idea of COW filesystems along with a couple GitHub issues, some tweets exchanged with @rcarmo and this post on improvements made on lxc-clone was enough to trigger my interest on BTRFS and I went out to learn more about it.</description></item><item><title>Ventriloquist demo</title><link>https://fabiorehm.com/blog/2013/10/13/ventriloquist-demo/</link><pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/10/13/ventriloquist-demo/</guid><description>A while ago I stumbled across this benchmark by Brandon Liu on StackMachine&amp;rsquo;s blog comparing the numbers for performing some typical tasks on his physical machine and doing the same thing using virtual machines.
The measurements were made using Discourse and compared the numbers of doing things on VirtualBox and VMware Fusion so I got curious to see how well vagrant-lxc shared folders would perform. What I ended up finding is that it seems that Discourse provides a base box that was configured by hand and the Chef cookbooks used only deal with some basic stuff and I&amp;rsquo;d have to either do things by hand or write some provisioning scripts on my own.</description></item><item><title>Announcing Ventriloquist</title><link>https://fabiorehm.com/blog/2013/09/11/announcing-ventriloquist/</link><pubDate>Wed, 11 Sep 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/09/11/announcing-ventriloquist/</guid><description>Although I&amp;rsquo;ve been writing about and working on a lot of Vagrant related stuff lately, I need to say that I&amp;rsquo;m not a &amp;ldquo;DevOps guy&amp;rdquo;. My day to day job still consists of building web apps using Ruby On Rails and even though I like using Puppet (and recently Chef), my daily work does not involve any sort of machine configuration management.
Configuring a Vagrant development environment is not an easy task.</description></item><item><title>vagrant-lxc 0.5.0 and beyond</title><link>https://fabiorehm.com/blog/2013/08/07/vagrant-lxc-0-5-0-and-beyond/</link><pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/08/07/vagrant-lxc-0-5-0-and-beyond/</guid><description>Last week I was able to release vagrant-lxc 0.5.0 and on this post you&amp;rsquo;ll get to know about some cool new stuff and the upcoming work I have in mind to reach what I believe would be a nice 1.0.0 milestone.
0.5.0 goodies This release it mostly related to the &amp;ldquo;user experience&amp;rdquo; of using the plugin. Apart from some highlights you&amp;rsquo;ll get to know below, there are a few small things that makes people&amp;rsquo;s lives a bit easier:</description></item><item><title>Vundler is now Bindler!</title><link>https://fabiorehm.com/blog/2013/07/23/vundler-is-now-bindler/</link><pubDate>Tue, 23 Jul 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/07/23/vundler-is-now-bindler/</guid><description>Quick update about Vundler: lots of people got confused about the plugin name because of Vim&amp;rsquo;s Vundle so we decided to rename it to Bindler. The name was originally proposed by Patrick Connolly and after seeing the pictures he pointed out (just forget about the first row ;) I thought that it&amp;rsquo;d fit nicely with a vagrant :)
Please note that you&amp;rsquo;ll need to uninstall and revert Vundler&amp;rsquo;s installation before upgrading to Bindler.</description></item><item><title>Crafting your own vagrant-lxc base box</title><link>https://fabiorehm.com/blog/2013/07/18/crafting-your-own-vagrant-lxc-base-box/</link><pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/07/18/crafting-your-own-vagrant-lxc-base-box/</guid><description>As I said before, &amp;ldquo;next generation&amp;rdquo; vagrant-lxc boxes should simplify the process of &amp;ldquo;promoting&amp;rdquo; existing containers to base boxes. To back that up I&amp;rsquo;ve wrote a detailed step-by-step for creating an Ubuntu Precise and Debian Squeeze base boxes from an Ubuntu Host and I&amp;rsquo;m pretty sure it is possible to reuse the ideas from this post to build base boxes for / from other distros that suits everyone&amp;rsquo;s needs.
I&amp;rsquo;ve followed the steps on an Ubuntu 12.</description></item><item><title>Vundler: Dead easy plugin management for Vagrant</title><link>https://fabiorehm.com/blog/2013/07/15/vundler-dead-easy-plugin-management-for-vagrant/</link><pubDate>Mon, 15 Jul 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/07/15/vundler-dead-easy-plugin-management-for-vagrant/</guid><description>UPDATE (23 JUL 2013): Vundler has been renamed to Bindler!
Vagrant&amp;rsquo;s plugin &amp;ldquo;ecossystem&amp;rdquo; just keep growing and recently there has been a lot of interest on having an easy way for managing project&amp;rsquo;s specific plugin dependencies to avoid Dependency Hell and / or to reduce the amount of steps someone has to take when joining an ongoing project. There are at least 4 issues on Vagrant&amp;rsquo;s issue tracker (#1874, #1789, #1700 and #1574) and one initiative by @tknerr to solve the problem.</description></item><item><title>Improving vagrant-lxc boxes</title><link>https://fabiorehm.com/blog/2013/06/10/improving-vagrant-lxc-boxes/</link><pubDate>Mon, 10 Jun 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/06/10/improving-vagrant-lxc-boxes/</guid><description>So I&amp;rsquo;ve played with Docker once again and have been looking around its codebase to find out how things work over there. Even though I&amp;rsquo;ve never wrote a single line of Go, it gave me some interesting insights about LXC itself and about packing up containers which influenced heavily the &amp;ldquo;next generation&amp;rdquo; vagrant-lxc base boxes and the upcoming work I have in mind for the provider.
Starting with V3 boxes, vagrant-lxc will introduce a better approach for building base boxes and will also simplify the process of &amp;ldquo;promoting&amp;rdquo; existing containers to base vagrant boxes.</description></item><item><title>Stop wasting bandwidth with vagrant-cachier</title><link>https://fabiorehm.com/blog/2013/05/24/stop-wasting-bandwidth-with-vagrant-cachier/</link><pubDate>Fri, 24 May 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/05/24/stop-wasting-bandwidth-with-vagrant-cachier/</guid><description>If you have done any kind of Puppet manifests / Chef cookbooks development using Vagrant chances are that you&amp;rsquo;ve been staring at your screen waiting for the machine to be provisioned for really long periods of time, specially when you need to destroy the VM and start over.
A while ago I came across this gist which solves part of the issue by caching downloaded packages on the host machine and sharing them among similar VM instances.</description></item><item><title>LXC provider for Vagrant</title><link>https://fabiorehm.com/blog/2013/04/28/lxc-provider-for-vagrant/</link><pubDate>Sun, 28 Apr 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/04/28/lxc-provider-for-vagrant/</guid><description>UPDATE: This post is likely to be out of date, please see this post for more
It&amp;rsquo;s been nearly 2 months since I open sourced my &amp;ldquo;not so pretty&amp;rdquo; initial spike and announced on Vagrant&amp;rsquo;s mailing list that I was going to work on this. By that time, Vagrant 1.1 wasn&amp;rsquo;t even released yet and it was a long way to get where it is now.
Almost two weeks after &amp;ldquo;releasing&amp;rdquo; the spike, Vagrant 1.</description></item><item><title>Announcing letter_opener_web 1.0</title><link>https://fabiorehm.com/blog/2013/01/22/announcing-letter_opener_web-1-0/</link><pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/01/22/announcing-letter_opener_web-1-0/</guid><description>One of the things I missed the most after going 100% on Vagrant was the ability to preview Rails apps sent mails on my browser. I got used to the awesome letter_opener gem which depends on launchy to fire up a new browser window with the email preview instead of sending. As launchy on its own wouldn&amp;rsquo;t be able to open up a browser window on the host machine from the guest box, I started to look around for alternatives and wasn&amp;rsquo;t able to find something else that worked for me.</description></item><item><title>100% on Vagrant</title><link>https://fabiorehm.com/blog/2013/01/17/100-percent-on-vagrant/</link><pubDate>Thu, 17 Jan 2013 00:00:00 +0000</pubDate><guid>https://fabiorehm.com/blog/2013/01/17/100-percent-on-vagrant/</guid><description>Last year I heard a lot about Vagrant and even though I had the chance to play with it, performance was always an issue that prevented me from doing 100% of my development work from a VM. By december, when my laptop started acting weird (and eventually died) I decided that my next computer would have as much cores and RAM that I could afford. I looked at a few different options and ended up getting a Dell Inspiron 15R SE with a Core I7 that has 4 cores and 8 threads and 8 Gb RAM.</description></item></channel></rss>